import { useState } from 'react'
import Head from 'next/head'
import type { GetServerSideProps } from 'next'
import { DataGoogleApi, ytVideo } from '../@types/types'
import CssBaseline from '@mui/material/CssBaseline';
import Menu from '../components/Header/menu/Menu'
import SimpleCard from '../components/assets/SimpleCard'
import Player from '../components/VideoPlayer/Player'
import { Main } from '../styles/main'
import { Container, Divider, Grid, Stack } from '@mui/material'
import Box from '@mui/system/Box'

type IProps = {
  dataYT: DataGoogleApi
}

const Home = (props: IProps) => {
  const firstPlay: ytVideo = props.dataYT?.items[0];
  const [playerState, setPlayerState] = useState<ytVideo>(firstPlay);
  const changePlayerVideo = (video: ytVideo) => setPlayerState(video);

  return (
    <>
      <Head>
        <title>Generation Cast</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      <CssBaseline />
      </Head>

    <Container sx={{ justifyContent: 'center', alignItems: 'center' }}
      >
      <Menu />
      <Main>
        <Grid
          container spacing={0}
          direction="column"
          justifyContent="center"
          alignItems="center"
          >
      <Player {...playerState} />

        <Grid
          container spacing={2}
          direction="row"
          justifyContent="space-between"
          alignItems="center">
          {props.dataYT?.items
            .filter(tem => tem.id.kind === 'youtube#video')
            .map((vid: ytVideo) => (
              <Box key={`${vid.etag}${vid.id.videoId}`}
                sx={{ width: 320, minWidth: 240, marginRight: 0.5, my: 6, pr: 2 }}
              >
                <SimpleCard key={`${vid.etag}${vid.id.videoId}`} {...vid} funcClick={ changePlayerVideo } />
              </Box>
            ))}
        </Grid>
        </Grid>
      </Main>

        <footer>
            Powered by{' '}
        </footer>
      </Container>
    </>
  )
}

export default Home

export const getServerSideProps: GetServerSideProps = async (context) => {
  const { NEXT_PUBLIC_API_LOCAL } = process.env
  const { dataYT } = await fetch(NEXT_PUBLIC_API_LOCAL
    || 'http://localhost:3000/api/cast').then(res => res.json()
  )

  return {
    props: {
      title: 'Home',
      dataYT
    }
  }
}
